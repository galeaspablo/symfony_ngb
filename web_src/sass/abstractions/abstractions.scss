/* Clearfix
 */
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

/* Clearboth
 */
@mixin clearboth{
  clear:both;
}

/* BreakWord
 */
@mixin breakWord{
  word-wrap: break-word;
  /*word-break:break-all;
  white-space: -moz-pre-wrap;
  white-space: -o-pre-wrap;
  white-space: pre-wrap;
  white-space: pre-line; */
}


/* Headers Font Style
 */
@mixin headerFontStyle{
  line-height: 120%;
  padding: 0;
  font-family: "Open Sans", sans-serif, Helvetica;
  font-weight: 500;
  text-transform: uppercase;
}

/* Rem Font Size With FallBack
 */
@mixin remFontSize($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

/* Rem Padding With FallBack (based on font Variables)
 */
@mixin remPadding($padding){
  $paddingsPx:();
  $paddingsRem:();
  @each $value in $padding{
    $paddingsPx: append($paddingsPx, ($value * 10) + px );
    $paddingsRem: append($paddingsRem , $value + rem);
  }
  padding: $paddingsPx;
  padding: $paddingsRem;
}
/* Rem Margin With FallBack (based on font Variables)
 */
@mixin remMargin($margin){
  $marginsPx:();
  $marginsRem:();
  @each $value in $margin{
    $marginsPx: append($marginsPx, ($value * 10) + px );
    $marginsRem: append($marginsRem , $value + rem);
  }
  margin: $marginsPx;
  margin: $marginsRem;
}
/* Rem Border Radius With FallBack (based on font Variables)
 */
@mixin remBorderRadius($bradius){
  $bradiusPx:();
  $bradiusRem:();
  @each $value in $bradius{
    $bradiusPx: append($bradiusPx, ($value * 10) + px );
    $bradiusRem: append($bradiusRem , $value + rem);
  }
  border-radius: $bradiusPx;
  border-radius: $bradiusRem;
}
/* Rem Min Width With FallBack (based on font Variables)
 */
@mixin remMinWidth($value){
  min-width: ($value * 10) + px;
  min-width: $value + rem;
}
/* Rem Width With FallBack (based on font Variables)
 */
@mixin remWidth($value){
  width: ($value * 10) + px;
  width: $value + rem;
}
/* Rem Line Height With FallBack (based on font Variables)
 */
@mixin remLineHeight($value){
  line-height: ($value * 10) + px;
  line-height: $value + rem;
}

/* Rem Top With FallBack (based on font Variables) */
@mixin remTop($value){
  top: ($value * 10) + px;
  top: $value + rem;
}
/* Rem Left With FallBack (based on font Variables)*/
@mixin remLeft($value){
  left: ($value * 10) + px;
  left: $value + rem;
}
/* Rem Right With FallBack (based on font Variables) */
@mixin remRight($value){
  right: ($value * 10) + px;
  right: $value + rem;
}
/* Rem Bottom With FallBack (based on font Variables)*/
@mixin remBottom($value){
  bottom: ($value * 10) + px;
  bottom: $value + rem;
}

/* Border Radius Max*/
@mixin border-radius-max{
  border-radius: 999px;
}
/* Border Radius Minimum*/
@mixin border-radius-minimum{
  @include remBorderRadius($fontMicro);
}

/* Color Descendants
 */
@mixin colorDescendantsFont($color){
  span,p,h1,h2,h3,h4,h5,h6,a,div,li{
    color:$color
  }
  a:hover{
    color:$color
  }
  color:$color;
}

/* Linear Gradient
 */
@mixin linearGradient($top, $bottom){
  background: $top; /* Old browsers */
  background: -moz-linear-gradient(top,  $top 0%, $bottom 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top,  $top 0%,$bottom 100%); /* Opera 11.10+ */
  background: -ms-linear-gradient(top,  $top 0%,$bottom 100%); /* IE10+ */
  background: linear-gradient(to bottom,  $top 0%,$bottom 100%); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}

/* Hide Text Without Breaking Accessibility
 */
@mixin accesibleHide{
  position: absolute;
  text-indent: -119988px;
  left: -119988px;
  overflow: hidden;
  text-align: left;
  text-transform: capitalize;
  height:1px;
  width:1px;
}
@mixin accesibleUnhide{
  //be careful with this accessible unhide
  position: initial;
  text-indent: initial;
  left: initial;
  overflow: initial;
  text-align: initial;
  text-transform: initial;
  height:initial;
  width:initial;
}

/* Background Color To Opacity
 */
@mixin backgroundOpacity($color, $opacity: 0.3) {
  background: $color; /* The Fallback */
  background: rgba($color, $opacity);
}
/* CSS Transitions Cross Browser
 */
@mixin cssTransitionCrossBrowser($argument){
  -moz-transition: $argument;
  -o-transition: $argument;
  -webkit-transition: $argument;
  transition: $argument;
}
@mixin noCssTransitionCrossBrowser{
  -moz-transition: none;
  -webkit-transition: none;
  -o-transition: none;
  transition: none;
}
/* Fontello Maker & Remover
 */
@mixin fontelloInside{
  //default icon
  content:'\e80a';
  //fontello
  font-family: "fontello";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  text-align: center;
  /* opacity: .8; */
  font-variant: normal;
  text-transform: none;
  /* font-size: 120%; */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */
}
@mixin fontelloBefore{
  &:before{
    @include fontelloInside;
  }
}
@mixin fontelloBeforeClear{
  &:before{
    content:none;
    display:none;
  }
}
@mixin fontelloAfter{
  &:after{
    @include fontelloInside;
  }
}
@mixin fontelloAfterClear{
  &:after{
    content:none;
    display:none;
  }
}
/* Quick Box Wizard
 */
@mixin boxBorderRadiusMarginPadding($border, $radius, $margin, $padding){
  border: $border;
  border-radius: $radius;
  margin: $margin;
  padding: $padding;
}

/* Box Shadows Mixins
 */
@mixin boxshadowSmall{
  -webkit-box-shadow: 2px 2px 6px 1px $BLACK;
  -moz-box-shadow: 2px 2px 6px 1px $BLACK;
  box-shadow: 2px 2px 6px 1px $BLACK;
  -webkit-box-shadow: 2px 2px 6px 1px rgba($BLACK,.75);
  -moz-box-shadow: 2px 2px 6px 1px rgba($BLACK,.75);
  box-shadow: 2px 2px 6px 1px rgba($BLACK,.75);
}
@mixin boxshadowMedium{
  -webkit-box-shadow: 3px 3px 10px 1px $BLACK;
  -moz-box-shadow: 3px 3px 10px 1px $BLACK;
  box-shadow: 3px 3px 10px 1px $BLACK;
  -webkit-box-shadow: 3px 3px 10px 1px rgba($BLACK,.75);
  -moz-box-shadow: 3px 3px 10px 1px rgba($BLACK,.75);
  box-shadow: 3px 3px 10px 1px rgba($BLACK,.75);
}
/* Box Shadow Large
 */
@mixin boxshadowLarge{
  -webkit-box-shadow: 6px 6px 13px 1px $BLACK;
  -moz-box-shadow: 6px 6px 13px 1px $BLACK;
  box-shadow: 6px 6px 13px 1px $BLACK;
  -webkit-box-shadow: 6px 6px 13px 1px rgba($BLACK,.75);
  -moz-box-shadow: 6px 6px 13px 1px rgba($BLACK,.75);
  box-shadow: 6px 6px 13px 1px rgba($BLACK,.75);
}
@mixin boxShadowAltA{
  -webkit-box-shadow: 0 0 3px 3px $GRAY;
  -moz-box-shadow: 0 0 3px 3px $GRAY;
  box-shadow: 0 0 3px 3px $GRAY;
  -webkit-box-shadow: 0 0 3px 3px rgba($GRAY,.75);
  -moz-box-shadow: 0 0 3px 3px rgba($GRAY,.75);
  box-shadow: 0 0 3px 3px rgba($GRAY,.75);
}

/* Buttons Mixins
 */
@mixin insideButtonBackgroundHoverTextHoverBorderHover($backgroundColor, $hoverBackgroundColor, $textColor, $hoverTextColor, $borderColor, $hoverBorderColor){
  &:hover {
    color: $hoverTextColor;
    background-color: $hoverBackgroundColor;
    border-color: $hoverBorderColor;
  }
  line-height:1em;
  border: 1px solid $borderColor;
  @include remPadding((4*$fontMicro) (7*$fontMicro));
  background-color: $backgroundColor;
  color:$textColor;
  cursor:pointer;
  font-weight:bold;
  @include border-radius-max;
}
@mixin buttonBackgroundHoverTextHoverBorderHover($backgroundColor, $hoverBackgroundColor,$textColor, $hoverTextColor, $borderColor, $hoverBorderColor){
  input[type=submit], div.fakeButton {
    @include insideButtonBackgroundHoverTextHoverBorderHover($backgroundColor, $hoverBackgroundColor, $textColor, $hoverTextColor, $borderColor, $hoverBorderColor);
  }
}

@mixin insideButtonColor1ToColor2{
  @include insideButtonBackgroundHoverTextHoverBorderHover($color1, $color2, $WHITE, $WHITE, $color1, $color2);
}

@mixin buttonColor1ToColor2{
  @include buttonBackgroundHoverTextHoverBorderHover($color1, $color2, $WHITE, $WHITE, $color1, $color2);
}

@mixin insideButtonOppColor1ToColor2{
  @include insideButtonBackgroundHoverTextHoverBorderHover($WHITE, $WHITE, $color1, $color2, $color1, $color2);
}

@mixin buttonOppColor1ToColor2{
  @include buttonBackgroundHoverTextHoverBorderHover($WHITE, $WHITE, $color1, $color2, $color1, $color2);
}

@mixin insideButtonGrayToDark{
  @include insideButtonBackgroundHoverTextHoverBorderHover($GRAY, $DARKGRAY, $WHITE, $WHITE, $GRAY, $BLACK);
}

@mixin buttonGrayToDark{
  @include buttonBackgroundHoverTextHoverBorderHover($GRAY, $DARKGRAY, $WHITE, $WHITE, $GRAY, $BLACK );
}



/* Zoom Image Transition
 */
@mixin zoomImage{
  -webkit-transform: scale(1.05,1.07);
  -webkit-transition-timing-function: ease-out;
  -webkit-transition-duration: 250ms;
  -moz-transform: scale(1.05,1.07);
  -moz-transition-timing-function: ease-out;
  -moz-transition-duration: 250ms;
}
/*
 * Background Image Retina
 */
@mixin retina{
  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
    @content;
  }
}

/* CenterAbsolute
 */
@mixin centerXYAbsoluteNoIE8{
  //IE8 and below not supported
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}
@mixin centerYAbsoluteNoIE8{
  //IE8 and below not supported
  position: absolute;
  top: 50%;
  -webkit-transform: translate(0,-50%);
  -ms-transform: translate(0,-50%);
  transform: translate(0,-50%);
}
@mixin centerXAbsoluteNoIE8{
  //IE8 and below not supported
  position: absolute;
  left: 50%;
  -webkit-transform: translate(-50%,0);
  -ms-transform: translate(-50%,0);
  transform: translate(-50%,0);
}
@mixin centerXYAbsoluteNoIE8{
  //IE8 and below not supported
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

/* Link Colorings */
@mixin linkDarkToColor1{
  a{
    color:$DARKGRAY;
    font-weight:bold;
    &:hover{
      color: $color1;
    }
  }
}

@mixin linkColor1ToDark{
  a{
    color:$color1;
    font-weight:bold;
    &:hover{
      color: $DARKGRAY;
    }
  }
}
@mixin linkColor1ToColor2{
  a{
    color:$color1;
    font-weight:bold;
    &:hover{
      color: $color2;
    }
  }
}
@mixin insideLinkColor1ToColor2{
  color:$color1;
  font-weight:bold;
  &:hover{
    color: $color2;
  }
}
@mixin linkColor2ToColor1{
  a{
    color:$color2;
    font-weight:bold;
    &:hover{
      color: $color1;
    }
  }
}
@mixin linkLightToColor1{
  a{
    color:$WHITE;
    font-weight:bold;
    &:hover{
      color: $color1;
    }
  }
}

@mixin linkColor1ToLight{
  a{
    color:$color1;
    font-weight:bold;
    &:hover{
      color: $WHITE;
    }
  }
}
@mixin linkDarkToColor2{
  a{
    color:$DARKGRAY;
    font-weight:bold;
    &:hover{
      color: $color2;
    }
  }
}

@mixin linkColor2ToDark{
  a{
    color:$color2;
    font-weight:bold;
    &:hover{
      color: $DARKGRAY;
    }
  }
}
@mixin linkLightToColor2{
  a{
    color:$WHITE;
    font-weight:bold;
    &:hover{
      color: $color2;
    }
  }
}

@mixin linkColor2ToLight{
  a{
    color:$color2;
    font-weight:bold;
    &:hover{
      color: $WHITE;
    }
  }
}

/* Flip Horizontally */
@mixin flipH{
  -moz-transform: scaleX(-1);
  -o-transform: scaleX(-1);
  -webkit-transform: scaleX(-1);
  transform: scaleX(-1);
  filter: FlipH;
  -ms-filter: "FlipH";
}